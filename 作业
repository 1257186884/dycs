1.测试不可能保证一个程序是完全正确的，但是测试却可以增强我们对程序完整的信心，测试可以让我们相信程序做了我么期望它做的事情。测试能够使我们尽早的发现程序的 bug 和不足。
一个 bug 被隐藏的时间越长，修复这个 bug 的代价就越大。在《快速软件开发》一书中已引用了大量的研究数据指出：最后才修改一个 bug 的代价是在 bug 产生时修改它的代价的10倍。
当然，我们主要讨论的是单元测试。单元测试是一个方法层面上的测试，也是最细粒度的测试。用于测试一个类的每一个方法都已经满足了方法的功能要求。
在开发中，对于自己开发的模块，只有在通过单元测试之后，才能提交到 SVN 库 或者 Git 库。

2.public class BubbleSort {
public static void main(String[] args) {
    int[] arr = new int[] { 2, 8, 7, 9, 4, 1, 5, 0 };
    bubbleSort(arr);
}

public static void bubbleSort(int[] arr) {
    //控制多少轮
    for (int i = 1; i < arr.length; i++) {
    //控制每一轮的次数
        for (int j = 0; j <= arr.length -1 - i; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp;
                temp = arr[j];
                arr[j] = arr[j + 1]; 
                arr[j + 1] = temp;
            }
        }
    }
    System.out.println(Arrays.toString(arr));

    }
}
输入数组 { 2, 8, 7, 9, 4, 1, 5, 0 };自动排序为0，1，2，4，5，7，8，9
运用了白盒测试用例
